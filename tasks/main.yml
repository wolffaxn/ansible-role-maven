---
- name: assert platform is supported
  assert:
    that:
      - ansible_architecture in ['x86_64']
      - ansible_os_family in ['RedHat']

- name: set os name
  set_fact:
    os_name: linux
  when: ansible_system == 'Linux'

- name: set os architecture
  set_fact:
    os_arch: x64
  when: ansible_architecture == 'x86_64'

- name: include version-specific variables
  include_vars: "versions/{{ maven_version }}.yml"

- name: ensure download directory exists
  file: path="{{ maven_download_dir }}" state=directory

- name: download Maven binary archive (tar.gz)
  get_url:
    url: "{{ maven_mirror }}/{{ maven_binary_archive }}"
    checksum: "{{ maven_redis_checksum }}"
    dest: "{{ maven_download_dir }}/{{ maven_binary_archive }}"
    owner: root
    group: root
    mode: "u=rwx,go=rx"
  register: maven_redis_get
  until: "'OK' in maven_redis_get.msg or 'file already exists' in maven_redis_get.msg"
  delay: "{{ download_delay }}"
  retries: "{{ download_retries }}"

- name: ensure installation directory exists
  file:
    path: "{{ maven_install_dir }}/apache-maven-{{ maven_version }}"
    state: directory
    owner: root
    group: root
    mode: "u=rwx,go=rx"

- name: install Maven binary archive (tar.gz)
  unarchive:
    src: "{{ maven_download_dir }}/{{ maven_binary_archive }}"
    dest: "{{ maven_install_dir }}"
    owner: root
    group: root
    mode: "go-w"
    copy: no

- name: create symbolic link
  file:
    src: "{{ maven_install_dir }}/apache-maven-{{ maven_version }}"
    dest: "{{ maven_install_dir }}/maven"
    force: true
    state: link

- block:
  - name: ensure '/etc/profile.d' exists
    file: path="/etc/profile.d" state=directory

  - name: export M2_HOME
    template: src=maven.sh.j2 dest=/etc/profile.d/maven.sh mode=a+x

  when: maven_set_maven_home

- name: remove temporary downloaded files, if requested
  file: path="{{ maven_download_dir }}/{{ item }}" state=absent
  with_items:
    - "{{ maven_binary_archive }}"
  ignore_errors: true
  when: maven_download_cleanup
